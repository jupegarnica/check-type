{"version":3,"sources":["../src/use.test.js"],"names":["describe","test","expect","String","not","toThrow","Number","val","length","includes","NaN","Infinity","isNaN","undefined","value","a","b","c","obj","x","y","rootObject","max","min","_","keyName","isValidNumber","isPositive","v","isValid","toBe","beforeAll","global","console","error","jest","fn","log","checkOrLog","err","toHaveBeenCalled"],"mappings":"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","sourcesContent":["import check from \"./index\";\nimport { setOnError } from \"./index\";\n\ndescribe(\"check strings\", () => {\n  test(\"check with constructor\", () => {\n    expect(() => {\n      check(String)(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(String)(\"\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(String)(\"\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(String)(``);\n    }).not.toThrow();\n\n    expect(() => {\n      check(Number)(\"a string\");\n    }).toThrow();\n  });\n  test(\"check with primitives\", () => {\n    expect(() => {\n      check(\"a string\")(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(\"a string\")(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(\"not\")(\"a string\");\n    }).toThrow();\n  });\n  test(\"check with Regex\", () => {\n    expect(() => {\n      check(/string/)(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(/(string)$/)(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check(/^(string)/)(\"a string\");\n    }).toThrow();\n  });\n  test(\"check with custom validator\", () => {\n    expect(() => {\n      check((val) => val.length === 8)(\"a string\");\n    }).not.toThrow();\n\n    expect(() => {\n      check((val) => val.includes(\"str\"))(\"a string\");\n    }).not.toThrow();\n  });\n});\n\ndescribe(\"check numbers\", () => {\n  test(\"check with constructor\", () => {\n    expect(() => {\n      check(String)(33);\n    }).toThrow();\n\n    expect(() => {\n      check(Number)(33);\n    }).not.toThrow();\n    expect(() => {\n      check(Number)(NaN);\n    }).not.toThrow();\n    expect(() => {\n      check(Number)(Infinity);\n    }).not.toThrow();\n    expect(() => {\n      check(Number.isNaN)(NaN);\n    }).not.toThrow();\n    expect(() => {\n      check(Number.isNaN)(1);\n    }).toThrow();\n  });\n  test(\"check with custom validator\", () => {\n    expect(() => {\n      check((val) => val > 0)(33);\n    }).not.toThrow();\n\n    expect(() => {\n      check((val) => val < 0)(33);\n    }).toThrow();\n  });\n});\n\ndescribe(\"check with enums\", () => {\n  test(\"optional\", () => {\n    expect(() => {\n      check([undefined, 0])(undefined);\n    }).not.toThrow();\n    expect(() => {\n      check([undefined, 0])(0);\n    }).not.toThrow();\n    expect(() => {\n      check([undefined, 0])(null);\n    }).toThrow();\n  });\n  test(\"constructors\", () => {\n    expect(() => {\n      check([String, Number])(\"12\");\n    }).not.toThrow();\n    expect(() => {\n      check([String, Number])(12);\n    }).not.toThrow();\n    expect(() => {\n      check([String, Number])(true);\n    }).toThrow();\n  });\n});\n\ndescribe(\"check objects\", () => {\n  const value = {\n    a: 1,\n    b: 2,\n  };\n  test(\"check with constructor\", () => {\n    expect(() => {\n      check({ a: Number })(value); // not throw, all ok\n    }).not.toThrow();\n\n    expect(() => {\n      check({ a: Number, c: Number })(value);\n    }).toThrow();\n    expect(() => {\n      check({ a: Number, c: undefined })(value);\n    }).not.toThrow();\n  });\n  test(\"keys on the schema are required\", () => {\n    expect(() => {\n      check({ a: 1 })({ a: 1, b: 2 });\n    }).not.toThrow();\n    expect(() => {\n      check({ c: 1 })({ a: 1, b: 2 });\n    }).toThrow();\n  });\n\n  test(\"check with primitives\", () => {\n    expect(() => {\n      check({ a: 2 })(value);\n    }).toThrow();\n    expect(() => {\n      check({ a: 1 })(value);\n    }).not.toThrow();\n  });\n  test(\"check with custom function\", () => {\n    expect(() => {\n      check({ a: (val) => val < 0 })(value);\n    }).toThrow();\n    expect(() => {\n      check({ a: (val) => val > 0 })(value);\n    }).not.toThrow();\n  });\n  test(\"check with custom function\", () => {\n    let obj = { x: \"x\", y: \"x\" };\n    expect(() => {\n      check({ x: (val, rootObject) => rootObject.y === val })(obj);\n    }).not.toThrow();\n\n    expect(() => {\n      check({\n        max: (val, rootObject) => val > rootObject.min,\n        min: (val, rootObject) => val < rootObject.max,\n      })({\n        max: 1,\n        min: -1,\n      });\n    }).not.toThrow();\n    expect(() => {\n      check({\n        max: (val, rootObject) => val > rootObject.min,\n        min: (val, rootObject) => val < rootObject.max,\n      })({\n        max: 1,\n        min: 10,\n      });\n    }).toThrow();\n\n    expect(() => {\n       check({\n         '/./': (val,_,keyName) => keyName === val,\n       })({\n         x: 'x',\n         y: 'y',\n       });\n    }).not.toThrow();\n    expect(() => {\n      check({\n        \"/./\": (val, _, keyName) => keyName === val,\n      })({\n        x: \"x\",\n        y: \"x\",\n      });\n    }).toThrow();\n\n  });\n  test(\"match key with regex\", () => {\n    expect(() => {\n      check({ [/[a-z]/]: Number })(value);\n    }).not.toThrow();\n    expect(() => {\n      check({ [/[a-z]/]: 0 })(value);\n    }).toThrow();\n    expect(() => {\n      // only throws if the key is matched\n      check({ [/[A-Z]/]: Number })(value);\n    }).not.toThrow();\n    expect(() => {\n      check({ [/[a-z]/]: Number, a: 1 })(value); // not throw, all lowercase keys are numbers\n    }).not.toThrow();\n    expect(() => {\n      check({ [/[a-z]/]: Number, a: 2 })(value); // will throw (a is not 2)\n    }).toThrow();\n  });\n});\n\ndescribe(\"composable\", () => {\n  test(\"isValidNumber\", () => {\n    const isValidNumber = check(Number);\n    expect(() => {\n      isValidNumber(2);\n    }).not.toThrow();\n\n    expect(() => {\n      isValidNumber(\"2\");\n    }).toThrow();\n  });\n  test(\"isPositive\", () => {\n    const isPositive = check((v) => v > 0);\n    expect(() => {\n      isPositive(2);\n    }).not.toThrow();\n\n    expect(() => {\n      isPositive(-1);\n    }).toThrow();\n  });\n});\n\ndescribe(\"set on error to isValid\", () => {\n  const isValid = setOnError(() => false);\n\n  test(\"should return true if valid\", () => {\n    expect(isValid(Number)(2)).toBe(true);\n  });\n  test(\"should return false if valid\", () => {\n    expect(isValid(String)(2)).toBe(false);\n  });\n});\ndescribe(\"set on error  to log error\", () => {\n  beforeAll(() => {\n    global.console = {\n      error: jest.fn(),\n      log: jest.fn(),\n    };\n  });\n  const checkOrLog = setOnError((err) => console.error(err));\n\n  test(\"should log error\", () => {\n    checkOrLog(Number)(2);\n    expect(global.console.error).not.toHaveBeenCalled();\n  });\n  test(\"should not log error\", () => {\n    checkOrLog(String)(2);\n    expect(global.console.error).toHaveBeenCalled();\n  });\n});\n"],"file":"use.test.js"}