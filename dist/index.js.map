{"version":3,"sources":["../src/index.js"],"names":["isType","type","val","undefined","includes","constructor","isInstanceOf","isNormalFunction","f","name","toLowerCase","isConstructor","err","isPrimitive","value","Object","checkObject","whatToDo","types","props","propsTypes","keys","filter","notIsRegExp","regExpToCheck","isRegExp","untestedReceivedProps","key","allValids","forEach","propName","push","regexpString","stringToRegExp","test","every","Boolean","checkShape","isValidType","rootValue","keyName","RegExp","checkRegExp","Array","some","_type","toString","JSON","stringify","regExp","string","eval","InvalidType","Error","args","throwOnError","check","error","setOnError","onError","isValid","isValidOrLog","console","isValidOrThrow"],"mappings":"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","sourcesContent":["export const isType = (type) => (val) =>\n  ![undefined, null].includes(val) && val.constructor === type;\n\nexport const isInstanceOf = (type) => (val) => val instanceof type;\n\nexport const isNormalFunction = (f) =>\n  typeof f === \"function\" && (!f.name || f.name[0] === f.name[0].toLowerCase());\n\nexport function isConstructor(f) {\n  // detect is a normal function (anonymous or its name starts with lowercase)\n  if (isNormalFunction(f)) return false;\n\n  try {\n    new f();\n  } catch (err) {\n    return false;\n  }\n  return true;\n}\n\nexport const isPrimitive = (value) => !(value instanceof Object);\n// export const isPrimitive = value => Object(value) !== value;\n\nconst checkObject = (whatToDo, types, props) => {\n  const propsTypes = Object.keys(types).filter(notIsRegExp);\n  const regExpToCheck = Object.keys(types).filter(isRegExp);\n\n  const untestedReceivedProps = Object.keys(props).filter(\n    (key) => !propsTypes.includes(key)\n  );\n  let allValids = [];\n\n  propsTypes.forEach((propName) => {\n    allValids.push(whatToDo(types[propName], props[propName], props, propName));\n  });\n  regExpToCheck.forEach((regexpString) => {\n    untestedReceivedProps.forEach((propName) => {\n      if (stringToRegExp(regexpString).test(propName)) {\n        allValids.push(\n          whatToDo(types[regexpString], props[propName], props, propName)\n        );\n      }\n    });\n  });\n  return allValids.every(Boolean);\n};\n\nexport const checkShape = (types, props) =>\n  checkObject(isValidType, types, props);\n\nexport const isValidType = (type, value, rootValue, keyName) => {\n  if (isType(RegExp)(type)) {\n    return checkRegExp(type, value);\n  } else if (isPrimitive(type)) {\n    return value === type;\n  } else if (isConstructor(type)) {\n    return isType(type)(value);\n  } else if (isType(Array)(type)) {\n    return type.some((_type) => isValidType(_type, value, rootValue, keyName));\n  } else if (isType(Object)(type) && value instanceof Object) {\n    return checkShape(type, value);\n  } else if (isNormalFunction(type)) {\n    return type(value, rootValue, keyName);\n  }\n  return false;\n};\n\nconst toString = JSON.stringify;\n\nconst checkRegExp = (regExp, value) => regExp.test(value);\nconst stringToRegExp = (string) => new RegExp(eval(string));\nconst isRegExp = (value) => value && /^\\/.+\\/$/.test(value);\nconst notIsRegExp = (value) => !isRegExp(value);\n\nexport class InvalidType extends Error {\n  constructor(...args) {\n    super(...args);\n  }\n  name = InvalidType;\n}\n\nconst throwOnError = (err) => {\n  // console.error(err);\n  throw new InvalidType(err);\n};\nconst check = (error) => (type) => (value) => {\n  try {\n    return (\n      isValidType(type, value) ||\n      error(`value ${toString(value)} do not match type ${type}`)\n    );\n  } catch (err) {\n    return error(err);\n  }\n};\n\nexport const setOnError = (onError) => check(onError);\n\nexport const isValid = setOnError(() => false);\n\nexport const isValidOrLog = setOnError((err) => console.error(err));\n\nexport const isValidOrThrow = setOnError(throwOnError);\n\nexport default isValidOrThrow;\n"],"file":"index.js"}