"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.constructors=exports.SerieValidationError=exports.SchemaValidationError=exports.EnumValidationError=exports.CastError=exports.TypeValidationError=exports.GeneratorFunction=exports.AsyncFunction=void 0;const AsyncFunction=Object.getPrototypeOf(async function(){}).constructor;exports.AsyncFunction=AsyncFunction;const GeneratorFunction=Object.getPrototypeOf(function*(){}).constructor;exports.GeneratorFunction=GeneratorFunction;const descriptor=data=>({value:data,writable:false,enumerable:false,configurable:false});class TypeValidationError extends TypeError{constructor(msg,data){super(msg);this.name="TypeValidationError";Object.defineProperty(this,"raw",descriptor(data))}}exports.TypeValidationError=TypeValidationError;class CastError extends AggregateError{constructor(errors,msg,data){super(errors,msg);this.name="CastError";Object.defineProperty(this,"raw",descriptor(data))}}exports.CastError=CastError;class EnumValidationError extends AggregateError{constructor(errors,msg,data){super(errors,msg);this.name="EnumValidationError";Object.defineProperty(this,"raw",descriptor(data))}}exports.EnumValidationError=EnumValidationError;class SchemaValidationError extends AggregateError{constructor(errors,msg,data){super(errors,msg);this.name="SchemaValidationError";Object.defineProperty(this,"raw",descriptor(data))}}exports.SchemaValidationError=SchemaValidationError;class SerieValidationError extends AggregateError{constructor(errors,msg,data){super(errors,msg);this.name="SerieValidationError";Object.defineProperty(this,"raw",descriptor(data))}}exports.SerieValidationError=SerieValidationError;const constructors=new Proxy([Proxy,Object,Function,Array,Number,Boolean,String,Symbol,Date,Promise,RegExp,Map,BigInt,Set,WeakMap,WeakSet,Error,EvalError,RangeError,ReferenceError,SyntaxError,TypeError,URIError,ArrayBuffer,Uint8Array,Int8Array,Uint16Array,Int16Array,Uint32Array,Int32Array,Float32Array,Float64Array,Uint8ClampedArray,BigUint64Array,BigInt64Array,SharedArrayBuffer,DataView,URL,URLSearchParams,GeneratorFunction,AsyncFunction],{get(target,key){if(key==0){return Proxy}return target[key]}});exports.constructors=constructors;